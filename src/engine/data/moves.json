[
    {
        "__type__": "Move",
        "values": {
            "name": "None",
            "description": "Do nothing."
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Kick",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Physical"
                    }
                ]
            ],
            "description": "A simple kick.\nA basic medium-damage attack, with a 1:2 damage to cost ratio.",
            "skillRequired": [
                [
                    {
                        "__type__": "Skill",
                        "name": "Acrobatics",
                        "level": 1
                    }
                ]
            ],
            "moveMessage": "{sender} kicks {target} for {move:hp neg} damage!",
            "hpValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -15
            },
            "stCost": {
                "__type__": "Bound",
                "left": -20,
                "right": -30
            },
            "effects": [
                {
                    "__type__": "StatusEffect",
                    "values": {
                        "name": "Hitstun",
                        "description": "Stun from being kicked.",
                        "target": "target",
                        "chances": [
                            [
                                15,
                                "uncountered"
                            ]
                        ],
                        "duration": 1,
                        "receiveMessage": "{self} is in hitstun!",
                        "wearoffMessage": "{self}'s hitstun has worn off.",
                        "noMove": "{self} cannot move due to hitstun!"
                    }
                }
            ],
            "speed": 40,
            "fastMessage": "{sender} swiftly kicks {target} for {move:hp neg} damage!",
            "blockChance": 70,
            "blockHPValue": {
                "__type__": "Bound",
                "left": -6,
                "right": -9
            },
            "blockFailHPValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -20
            },
            "blockMessage": "{sender} attempts to kick {target} but {target} blocks it, taking {move:hpBlock neg} damage!",
            "blockFailMessage": "{sender} attempts to kick {target} and {target} fails to block it, taking {move:hpBlockF neg} damage!",
            "evadeChance": 50,
            "evadeFailHPValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -25
            },
            "evadeMessage": "{sender} attempts to kick {target} but {target} evades it!",
            "evadeFailMessage": "{sender} attempts to kick {target} and {target} fails to evade it, taking {move:hpEvadeF neg} damage!",
            "criticalChance": 10,
            "criticalHPValue": {
                "__type__": "Bound",
                "left": -20,
                "right": -30
            },
            "blockFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -20,
                "right": -40
            },
            "evadeFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -30,
                "right": -50
            },
            "criticalMessage": "A headshot!\n{sender} kicks {target} for {move:hpCrit neg} damage!",
            "fastCriticalMessage": "A headshot!\n{sender} swiftly kicks {target} for {move:hpCrit neg} damage!",
            "blockFailCriticalMessage": "A headshot!\n{sender} attempts to kick {target} and {target} fails to block it, taking {move:hpBlockFCrit neg} damage!",
            "evadeFailCriticalMessage": "A headshot!\n{sender} attempts to kick {target} and {target} fails to evade it, taking {move:hpEvadeFCrit neg} damage!",
            "failureChance": 20,
            "failureHPValue": {
                "__type__": "Bound",
                "left": -5,
                "right": -10
            },
            "failureMessage": "{sender} tries to kick {target} but falls on the ground and loses {move:hpF neg} {hp.ext_full}."
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Jab",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Physical"
                    }
                ]
            ],
            "description": "A quick punch.\nAn easy low-damage attack, with a low chance of countering.",
            "moveMessage": "{sender} jabs {target} for {move:hp neg} damage!",
            "hpValue": {
                "__type__": "Bound",
                "left": -5,
                "right": -10
            },
            "stCost": {
                "__type__": "Bound",
                "left": -15,
                "right": -20
            },
            "effects": [
                {
                    "__type__": "StatusEffect",
                    "values": {
                        "name": "Hitstun",
                        "description": "Stun from being punched.",
                        "target": "target",
                        "chances": [
                            [
                                10,
                                "uncountered"
                            ]
                        ],
                        "duration": 1,
                        "receiveMessage": "{self} is in hitstun!",
                        "wearoffMessage": "{self}'s hitstun has worn off.",
                        "noMove": "{self} cannot move due to hitstun!"
                    }
                }
            ],
            "speed": 70,
            "fastMessage": "{sender} swiftly jabs {target} for {move:hp neg} damage!",
            "blockChance": 80,
            "blockHPValue": {
                "__type__": "Bound",
                "left": -1,
                "right": -2
            },
            "blockFailHPValue": {
                "__type__": "Bound",
                "left": -8,
                "right": -13
            },
            "blockMessage": "{sender} attempts to jab {target} but {target} blocks it, taking {move:hpBlock neg} damage!",
            "blockFailMessage": "{sender} attempts to jab {target} and {target} fails to block it, taking {move:hpBlockF neg} damage!",
            "evadeChance": 40,
            "evadeFailHPValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -20
            },
            "evadeMessage": "{sender} attempts to jab {target} but {target} evades it!",
            "evadeFailMessage": "{sender} attempts to jab {target} and {target} fails to evade it, taking {move:hpEvadeF neg} damage!",
            "criticalChance": 20,
            "criticalHPValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -20
            },
            "blockFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -25
            },
            "evadeFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -20,
                "right": -30
            },
            "criticalMessage": "A headshot!\n{sender} jabs {target} for {move:hpCrit neg} damage!",
            "fastCriticalMessage": "A headshot!\n{sender} swiftly jabs {target} for {move:hpCrit neg} damage!",
            "blockFailCriticalMessage": "A headshot!\n{sender} attempts to jab {target} and {target} fails to block it, taking {move:hpBlockFCrit neg} damage!",
            "evadeFailCriticalMessage": "A headshot!\n{sender} attempts to jab {target} and {target} fails to evade it, taking {move:hpEvadeFCrit neg} damage!",
            "failureChance": 8,
            "failureMessage": "{sender} tries to jab {target} but misses."
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Sword",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Physical"
                    }
                ]
            ],
            "description": "Slash with a sword.\nA strong weapon with high {st.ext_full} costs but a slightly better damage\nto cost ratio (1:2), and a small chance to deal a critical,\npotentially one-shot blow.",
            "itemRequired": [
                [
                    {
                        "name": "Sword"
                    }
                ]
            ],
            "moveMessage": "{sender} strikes {target} with a sword for {move:hp neg} damage!",
            "hpValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -30
            },
            "stCost": {
                "__type__": "Bound",
                "left": -35,
                "right": -50
            },
            "effects": [
                {
                    "__type__": "StatusEffect",
                    "values": {
                        "name": "Bleeding",
                        "description": "Bleeding from a sword wound.",
                        "target": "target",
                        "chances": [
                            [
                                30,
                                "uncountered"
                            ]
                        ],
                        "duration": 3,
                        "receiveMessage": "{self} is now bleeding!",
                        "applyMessage": "{self} took {-hpValue} bleeding damage!",
                        "wearoffMessage": "{self} has stopped bleeding.",
                        "hpValue": {
                            "__type__": "Bound",
                            "left": -2,
                            "right": -4
                        }
                    }
                }
            ],
            "speed": 20,
            "fastMessage": "{sender} quickly strikes {target} with a sword for {move:hp neg} damage!",
            "blockChance": 0,
            "blockHPValue": {
                "__type__": "Bound",
                "left": -3,
                "right": -6
            },
            "blockFailHPValue": {
                "__type__": "Bound",
                "left": -20,
                "right": -35
            },
            "blockMessage": "{sender} attempts to strike {target} with a sword but {target} blocks it, taking only {move:hpBlock neg} damage!",
            "blockFailMessage": "{sender} attempts to strike {target} with a sword and {target} fails to block, taking {move:hpBlockF neg} damage!",
            "evadeChance": 50,
            "evadeFailHPValue": {
                "__type__": "Bound",
                "left": -25,
                "right": -40
            },
            "evadeMessage": "{sender} attempts to strike {target} with a sword but {target} dodges it!",
            "evadeFailMessage": "{sender} attempts to strike {target} with a sword and {target} fails to dodge, taking {move:hpEvadeF neg} damage!",
            "criticalChance": 3,
            "criticalHPValue": {
                "__type__": "Bound",
                "left": -75,
                "right": -150
            },
            "blockFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -100,
                "right": -175
            },
            "evadeFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -125,
                "right": -200
            },
            "criticalMessage": "{sender} pulls a Kingdom Come Deliverance and critically strikes {target} with a sword for {move:hpCrit neg} damage!",
            "fastCriticalMessage": "Too slow!\n{sender} pulls a Kingdom Come Deliverance and critically strikes {target} with a sword for {move:hpCrit neg} damage!",
            "blockFailCriticalMessage": "{sender} pulls a Kingdom Come Deliverance and bypasses {target}'s block with a sword, critically striking them for {move:hpBlockFCrit neg} damage!",
            "evadeFailCriticalMessage": "{sender} pulls a Kingdom Come Deliverance and predicts {target}'s dodge, critically striking them for {move:hpEvadeFCrit neg} damage!",
            "failureChance": 15,
            "failureHPValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -30
            },
            "failureMessage": "{sender} tries to strike {target} with a sword but falls on the ground and hits themselves for {move:hpF neg} damage."
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Fire Ball",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Magical"
                    }
                ]
            ],
            "description": "Summon a fireball.\nA standard, medium-damage attack that costs {mp.ext_full}.",
            "moveMessage": "{sender} shoots a ball of fire at {target} for {move:hp neg} damage!",
            "hpValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -20
            },
            "mpCost": {
                "__type__": "Bound",
                "left": -25,
                "right": -40
            },
            "effects": [
                {
                    "__type__": "StatusEffect",
                    "values": {
                        "name": "Fire",
                        "description": "You're on fire!",
                        "target": "target",
                        "chances": [
                            [
                                30,
                                "uncountered"
                            ],
                            [
                                30,
                                "failure"
                            ]
                        ],
                        "duration": 2,
                        "receiveMessage": "{self} is on fire!",
                        "applyMessage": "{self} took {-hpValue} damage from fire!",
                        "wearoffMessage": "{self} is no longer on fire.",
                        "hpValue": {
                            "__type__": "Bound",
                            "left": -3,
                            "right": -6
                        }
                    }
                }
            ],
            "speed": 40,
            "fastMessage": "{sender} shoots a FAST ball of fire at {target} for {move:hp neg} damage!",
            "blockChance": 60,
            "blockHPValue": {
                "__type__": "Bound",
                "left": -5,
                "right": -15
            },
            "blockFailHPValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -20
            },
            "blockMessage": "{sender} shoots a ball of fire at {target} but {target} blocks it, taking {move:hpBlock neg} damage!",
            "blockFailMessage": "{sender} shoots a ball of fire at {target} and {target} fails to block it, taking {move:hpBlockF neg} damage!",
            "evadeChance": 40,
            "evadeFailHPValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -30
            },
            "evadeMessage": "{sender} shoots a ball of fire at {target} but {target} evades it!",
            "evadeFailMessage": "{sender} shoots a ball of fire at {target} and {target} fails to evade it, taking {move:hpEvadeF neg} damage!",
            "criticalChance": 20,
            "criticalHPValue": {
                "__type__": "Bound",
                "left": -20,
                "right": -40
            },
            "blockFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -20,
                "right": -40
            },
            "evadeFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -30,
                "right": -60
            },
            "criticalMessage": "{sender} shoots a DEADLY ball of fire at {target} for {move:hpCrit neg} damage!",
            "fastCriticalMessage": "{sender} shoots a FAST AND DEADLY ball of fire at {target} for {move:hpCrit neg} damage!",
            "blockFailCriticalMessage": "{sender} shoots a DEADLY ball of fire at {target} and {target} fails to block it, taking {move:hpBlockFCrit neg} damage!",
            "evadeFailCriticalMessage": "{sender} shoots a DEADLY ball of fire at {target} and {target} fails to evade it, taking {move:hpEvadeFCrit neg} damage!",
            "failureChance": 20,
            "failureHPValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -20
            },
            "failureMessage": "{sender} tries to shoot a ball of fire but it explodes in their face for {move:hpF neg} damage!"
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Slam",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Physical"
                    }
                ]
            ],
            "description": "Slam down on your foe.\nA move with high variability in damage output but with luck,\noffers 25 damage at 40 {st.ext_full} cost instead of 50 (1:2 ratio).",
            "skillRequired": [
                [
                    {
                        "__type__": "Skill",
                        "name": "Acrobatics",
                        "level": 1
                    }
                ]
            ],
            "moveMessage": "{sender} jumps above {target} and slams down for {move:hp neg} damage!",
            "hpValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -25
            },
            "stCost": {
                "__type__": "Bound",
                "left": -30,
                "right": -40
            },
            "effects": [
                {
                    "__type__": "StatusEffect",
                    "values": {
                        "name": "Hitstun",
                        "description": "Stun from being slammed on.",
                        "target": "target",
                        "chances": [
                            [
                                30,
                                "uncountered"
                            ]
                        ],
                        "duration": 1,
                        "receiveMessage": "{self} is in hitstun!",
                        "wearoffMessage": "{self}'s hitstun has worn off.",
                        "noMove": "{self} cannot move due to hitstun!"
                    }
                }
            ],
            "speed": 30,
            "fastMessage": "{sender} quickly jumps above {target} and slams down for {move:hp neg} damage!",
            "blockChance": 70,
            "blockHPValue": {
                "__type__": "Bound",
                "left": -8,
                "right": -15
            },
            "blockFailHPValue": {
                "__type__": "Bound",
                "left": -20,
                "right": -25
            },
            "blockMessage": "{sender} tries to slam down on {target} but {target} blocks it, taking only {move:hpBlock neg} damage!",
            "blockFailMessage": "{sender} tries to slam down on {target} and {target} fails to block it, taking {move:hpBlockF neg} damage!",
            "evadeChance": 40,
            "evadeFailHPValue": {
                "__type__": "Bound",
                "left": -25,
                "right": -40
            },
            "evadeMessage": "{sender} tries to slam down on {target} but {target} dodges it!",
            "evadeFailMessage": "{sender} tries to slam down on {target} and {target} fails to dodge it, taking {move:hpEvadeF neg} damage!",
            "criticalChance": 10,
            "criticalHPValue": {
                "__type__": "Bound",
                "left": -23,
                "right": -38
            },
            "blockFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -30,
                "right": -38
            },
            "evadeFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -38,
                "right": -60
            },
            "criticalMessage": "{sender} slams down on {target} for {move:hpCrit neg} critical damage!",
            "fastCriticalMessage": "{sender} quickly slams down on {target} for {move:hpCrit neg} critical damage!",
            "blockFailCriticalMessage": "{sender} tries to slam down on {target} and {target} fails to block it, taking {move:hpBlockFCrit neg} critical damage!",
            "evadeFailCriticalMessage": "{sender} tries to slam down on {target} and {target} fails to dodge it, taking {move:hpEvadeFCrit neg} critical damage!",
            "failureChance": 15,
            "failureHPValue": {
                "__type__": "Bound",
                "left": -5,
                "right": -10
            },
            "failureMessage": "{sender} tries to slam down on {target} but hits the ground, losing {move:hpF neg} {hp.ext_full}!"
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Knife",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Physical"
                    }
                ]
            ],
            "description": "Slash with a knife.\nA medium-damage weapon that is dangerous to counter, and has a\nrelatively high critical chance.",
            "skillRequired": [
                [
                    {
                        "__type__": "Skill",
                        "name": "Knife Handling",
                        "level": 1
                    }
                ]
            ],
            "itemRequired": [
                [
                    {
                        "name": "Knife"
                    }
                ]
            ],
            "moveMessage": "{sender} slashes {target} with a knife, dealing {move:hp neg} damage!",
            "hpValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -20
            },
            "stCost": {
                "__type__": "Bound",
                "left": -30,
                "right": -35
            },
            "effects": [
                {
                    "__type__": "StatusEffect",
                    "values": {
                        "name": "Bleeding",
                        "description": "Bleeding from a knife wound.",
                        "target": "target",
                        "chances": [
                            [
                                20,
                                "uncountered"
                            ]
                        ],
                        "duration": 2,
                        "receiveMessage": "{self} is now bleeding!",
                        "applyMessage": "{self} took {-hpValue} bleeding damage!",
                        "wearoffMessage": "{self} has stopped bleeding.",
                        "hpValue": -2
                    }
                }
            ],
            "speed": 30,
            "fastMessage": "{sender} quickly slashes {target} with a knife, dealing {move:hp neg} damage!",
            "blockChance": 60,
            "blockHPValue": {
                "__type__": "Bound",
                "left": -6,
                "right": -12
            },
            "blockFailHPValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -25
            },
            "blockMessage": "{sender} tries slashing {target} with a knife but {target} blocks, dealing only {move:hpBlock neg} damage!",
            "blockFailMessage": "{sender} slashes {target} with a knife and {target} failed to block, dealing {move:hpBlockF neg} damage!",
            "evadeChance": 45,
            "evadeFailHPValue": {
                "__type__": "Bound",
                "left": -20,
                "right": -30
            },
            "evadeMessage": "{sender} tries slashing {target} with a knife but {target} dodged it!",
            "evadeFailMessage": "{sender} slashes {target} with a knife and {target} failed to dodge, dealing {move:hpEvadeF neg} damage!",
            "criticalChance": 20,
            "criticalHPValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -25
            },
            "blockFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -25,
                "right": -35
            },
            "evadeFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -30,
                "right": -40
            },
            "criticalMessage": "A critical!\n{sender} slashes {target} with a knife, dealing {move:hpCrit neg} damage!",
            "fastCriticalMessage": "A critical!\n{sender} swiftly slashes {target} with a knife, dealing {move:hpCrit neg} damage!",
            "blockFailCriticalMessage": "A critical!\n{sender} slashes {target} with a knife and {target} failed to block, dealing {move:hpBlockFCrit neg} damage!",
            "evadeFailCriticalMessage": "A critical!\n{sender} slashes {target} with a knife and {target} failed to dodge, dealing {move:hpEvadeFCrit neg} damage!",
            "failureChance": 10,
            "failureHPValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -15
            },
            "failureMessage": "{sender} tries slashing {target} with a knife but hits themself, dealing {move:hpF neg} damage."
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Throw Knife",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Physical"
                    }
                ]
            ],
            "description": "Throw a knife.\nA medium-damage weapon, boasting a high critical chance,\nbut requires you to dispose a knife.\nIt is harder to block than to evade, but failing evasion is worse.",
            "skillRequired": [
                [
                    {
                        "__type__": "Skill",
                        "name": "Knife Handling",
                        "level": 2
                    }
                ]
            ],
            "itemRequired": [
                [
                    {
                        "name": "Knife",
                        "count": 1
                    }
                ]
            ],
            "moveMessage": "{sender} throws a knife at {target}, dealing {move:hp neg} damage!",
            "hpValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -20
            },
            "stCost": {
                "__type__": "Bound",
                "left": -25,
                "right": -30
            },
            "effects": [
                {
                    "__type__": "StatusEffect",
                    "values": {
                        "name": "Bleeding",
                        "description": "Bleeding from a knife wound.",
                        "target": "target",
                        "chances": [
                            [
                                30,
                                "uncountered"
                            ]
                        ],
                        "duration": 2,
                        "receiveMessage": "{self} is now bleeding!",
                        "applyMessage": "{self} took {-hpValue} bleeding damage!",
                        "wearoffMessage": "{self} has stopped bleeding.",
                        "hpValue": -2
                    }
                }
            ],
            "speed": 30,
            "fastMessage": "{sender} swiftly throws a knife at {target}, dealing {move:hp neg} damage!",
            "blockChance": 40,
            "blockHPValue": {
                "__type__": "Bound",
                "left": -6,
                "right": -12
            },
            "blockFailHPValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -25
            },
            "blockMessage": "{sender} throws a knife at {target} who is blocking, dealing {move:hpBlock neg} damage!",
            "blockFailMessage": "{sender} throws a knife at {target} and {target} failed to block, dealing {move:hpBlockF neg} damage!",
            "evadeChance": 60,
            "evadeFailHPValue": {
                "__type__": "Bound",
                "left": -20,
                "right": -30
            },
            "evadeMessage": "{sender} throws a knife at {target} but {target} evades it!",
            "evadeFailMessage": "{sender} throws a knife at {target} and {target} failed to evade, dealing {move:hpEvadeF neg} damage!",
            "criticalChance": 30,
            "criticalHPValue": {
                "__type__": "Bound",
                "left": -20,
                "right": -30
            },
            "blockFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -25,
                "right": -35
            },
            "evadeFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -30,
                "right": -40
            },
            "criticalMessage": "A critical!\n{sender} throws a knife at {target}, dealing {move:hpCrit neg} damage!",
            "fastCriticalMessage": "A critical!\n{sender} swiftly throws a knife at {target}, dealing {move:hpCrit neg} damage!",
            "blockFailCriticalMessage": "A critical!\n{sender} throws a knife at {target} and {target} failed to block, dealing {move:hpBlockFCrit neg} damage!",
            "evadeFailCriticalMessage": "A critical!\n{sender} throws a knife at {target} and {target} failed to evade, dealing {move:hpEvadeFCrit neg} damage!",
            "failureChance": 10,
            "failureHPValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -15
            },
            "failureMessage": "{sender} tries to throw a knife at {target} but hits themself, dealing {move:hpF neg} damage."
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Longbow",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Physical"
                    }
                ]
            ],
            "description": "Fire an arrow with a longbow.\nA medium-damage weapon that requires a lot of {st.ext_full}, but will deal\nmoderate {st.ext_full} damage.",
            "skillRequired": [
                [
                    {
                        "__type__": "Skill",
                        "name": "Bow Handling",
                        "level": 1
                    }
                ]
            ],
            "itemRequired": [
                [
                    {
                        "name": "Longbow"
                    },
                    {
                        "name": "Arrow",
                        "count": 1
                    }
                ]
            ],
            "moveMessage": "{sender} shoots an arrow at {target}, dealing {move:hp neg} damage and draining {move:st neg} {st.ext_full}!",
            "hpValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -25
            },
            "stValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -25
            },
            "stCost": {
                "__type__": "Bound",
                "left": -35,
                "right": -50
            },
            "effects": [
                {
                    "__type__": "StatusEffect",
                    "values": {
                        "name": "Bleeding",
                        "description": "Bleeding from an arrow wound.",
                        "target": "target",
                        "chances": [
                            [
                                20,
                                "uncountered"
                            ]
                        ],
                        "duration": 2,
                        "receiveMessage": "{self} is now bleeding!",
                        "applyMessage": "{self} took {-hpValue} bleeding damage!",
                        "wearoffMessage": "{self} has stopped bleeding.",
                        "hpValue": {
                            "__type__": "Bound",
                            "left": -2,
                            "right": -4
                        }
                    }
                }
            ],
            "speed": 40,
            "fastMessage": "{sender} quickly shoots an arrow at {target}, dealing {move:hp neg} damage and draining {move:st neg} {st.ext_full}!",
            "blockChance": 70,
            "blockHPValue": {
                "__type__": "Bound",
                "left": -8,
                "right": -13
            },
            "blockFailHPValue": {
                "__type__": "Bound",
                "left": -20,
                "right": -30
            },
            "blockFailSTValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -20
            },
            "blockMessage": "{sender} shoots an arrow at {target} but {target} blocks it, only dealing {move:hpBlock neg} damage!",
            "blockFailMessage": "{sender} shoots an arrow at {target} and {target} fails to block it, dealing {move:hpBlockF neg} damage and draining {move:stBlockF neg} {st.ext_full}!",
            "evadeChance": 60,
            "evadeFailHPValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -30
            },
            "evadeFailSTValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -20
            },
            "evadeMessage": "{sender} shoots an arrow at {target} but {target} evades it!",
            "evadeFailMessage": "{sender} shoots an arrow at {target} and {target} fails to evade it, dealing {move:hpEvadeF neg} damage and draining {move:stEvadeF neg} {st.ext_full}!",
            "criticalChance": 10,
            "criticalHPValue": {
                "__type__": "Bound",
                "left": -30,
                "right": -40
            },
            "criticalSTValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -30
            },
            "blockFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -30,
                "right": -45
            },
            "blockFailCriticalSTValue": {
                "__type__": "Bound",
                "left": -20,
                "right": -40
            },
            "evadeFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -35,
                "right": -45
            },
            "evadeFailCriticalSTValue": {
                "__type__": "Bound",
                "left": -25,
                "right": -45
            },
            "criticalMessage": "{sender} critically strikes {target} with an arrow, dealing {move:hpCrit neg} damage and draining {move:stCrit neg} {st.ext_full}!",
            "fastCriticalMessage": "{sender} critically and swiftly strikes {target} with an arrow, dealing {move:hpCrit neg} damage and draining {move:stCrit neg} {st.ext_full}!",
            "blockFailCriticalMessage": "{target} fails to block and {sender} critically strikes {target} with an arrow, dealing {move:hpBlockFCrit neg} damage and draining {move:stBlockFCrit neg} {st.ext_full}!",
            "evadeFailCriticalMessage": "{target} fails to evade and {sender} critically strikes {target} with an arrow, dealing {move:hpEvadeFCrit neg} damage and draining {move:stEvadeFCrit neg} {st.ext_full}!",
            "failureChance": 20,
            "failureHPValue": {
                "__type__": "Bound",
                "left": -5,
                "right": -10
            },
            "failureSTValue": {
                "__type__": "Bound",
                "left": -1,
                "right": -5
            },
            "failureMessage": "{sender} tries to shoot an arrow at {target} but hits themself, losing {move:hpF neg} {hp.ext_full} and {move:stF neg} {st.ext_full}."
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Equilibrium",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Magical"
                    }
                ]
            ],
            "description": "Convert 25 {hp.ext_full} into magicka- {mp.ext_full}.\nThis move is uncounterable; the opponent cannot stop this process.\nthere is a 1/10 chance of failing, which takes away both {hp.ext_full}\nand {mp.ext_full}.",
            "hpCost": -25,
            "mpCost": 25,
            "speed": 100,
            "fastMessage": "{sender} uses Equilibrium, losing {move:hpC neg} {hp.ext_full} for {move:mpC} {mp.ext_full}!",
            "criticalChance": 0,
            "failureChance": 10,
            "failureHPValue": {
                "__type__": "Bound",
                "left": -5,
                "right": -15
            },
            "failureMPValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -25
            },
            "failureMessage": "{sender} tries using Equilibrium but it backfires, making {sender} lose {int(move.fmt('hpF neg')) + int(move.fmt('hpC neg'))} {hp.ext_full} and {move:mpF neg} {mp.ext_full}."
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Bobomb",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Physical"
                    }
                ]
            ],
            "description": "Throw a bob-omb.\nA bob-omb is hefty to throw, but is powerful and hard to evade.",
            "itemRequired": [
                [
                    {
                        "name": "Bob-omb",
                        "count": 1
                    }
                ]
            ],
            "moveMessage": "{sender} throws a bob-omb at {target} and it explodes, dealing {move:hp neg} damage!",
            "hpValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -35
            },
            "stCost": {
                "__type__": "Bound",
                "left": -25,
                "right": -40
            },
            "effects": [
                {
                    "__type__": "StatusEffect",
                    "values": {
                        "name": "Hitstun",
                        "description": "Stun from a bob-omb explosion.",
                        "target": "target",
                        "chances": [
                            [
                                20,
                                "uncountered"
                            ],
                            [
                                20,
                                "failure"
                            ]
                        ],
                        "duration": 1,
                        "receiveMessage": "{self} is in hitstun!",
                        "wearoffMessage": "{self}'s hitstun has worn off.",
                        "noMove": "{self} cannot move due to hitstun!"
                    }
                }
            ],
            "speed": 30,
            "fastMessage": "{sender} quickly throws a bob-omb at {target} and it explodes, dealing {move:hp neg} damage!",
            "blockChance": 60,
            "blockHPValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -25
            },
            "blockFailHPValue": {
                "__type__": "Bound",
                "left": -20,
                "right": -35
            },
            "blockMessage": "{sender} throws a bob-omb at {target} but {target} blocks, dealing only {move:hpBlock neg} damage!",
            "blockFailMessage": "{sender} throws a bob-omb at {target} and {target} fails to block, dealing {move:hpBlockF neg} damage!",
            "evadeChance": 35,
            "evadeFailHPValue": {
                "__type__": "Bound",
                "left": -25,
                "right": -40
            },
            "evadeMessage": "{sender} throws a bob-omb at {target} but {target} evades it!",
            "evadeFailMessage": "{sender} throws a bob-omb at {target} and {target} fails to evade it, dealing {move:hpEvadeF neg} damage!",
            "criticalChance": 15,
            "criticalHPValue": {
                "__type__": "Bound",
                "left": -25,
                "right": -40
            },
            "blockFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -25,
                "right": -40
            },
            "evadeFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -30,
                "right": -45
            },
            "criticalMessage": "{sender} throws a bob-omb at {target} and it explodes right next to them, dealing {move:hpCrit neg} critical damage!",
            "fastCriticalMessage": "{sender} quickly throws a bob-omb at {target} and it explodes right next to them, dealing {move:hpCrit neg} critical damage!",
            "blockFailCriticalMessage": "{sender} throws a bob-omb right next to {target} and {target} fails to block, dealing {move:hpBlockFCrit neg} critical damage!",
            "evadeFailCriticalMessage": "{sender} throws a bob-omb right next to {target} and {target} fails to evade, dealing {move:hpEvadeFCrit neg} critical damage!",
            "failureChance": 6,
            "failureHPValue": {
                "__type__": "Bound",
                "left": -15,
                "right": -25
            },
            "failureMessage": "{sender} tries to throw a bob-omb at {target} but the bob-omb explodes next to {sender}, dealing {move:hpF neg} damage!"
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Yeet",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Physical"
                    }
                ]
            ],
            "description": "Yeet your opponent.\nA high-damage attack that puts the target in severe hitstun, but requires nearly all {st.ext_full} and {mp.ext_full} to execute.",
            "moveMessage": "{sender} yeets {target}, dealing {move:hp neg} damage!",
            "hpValue": {
                "__type__": "Bound",
                "left": -30,
                "right": -49
            },
            "stCost": {
                "__type__": "Bound",
                "left": -90,
                "right": -100
            },
            "mpCost": {
                "__type__": "Bound",
                "left": -90,
                "right": -100
            },
            "effects": [
                {
                    "__type__": "StatusEffect",
                    "values": {
                        "name": "Severe Hitstun",
                        "description": "Stun from being yeeted.",
                        "target": "target",
                        "chances": [
                            [
                                100,
                                "uncountered"
                            ]
                        ],
                        "duration": 2,
                        "receiveMessage": "{self} is in severe hitstun!",
                        "wearoffMessage": "{self}'s severe hitstun has worn off.",
                        "noMove": "{self} cannot move due to severe hitstun!",
                        "noCounter": "{self} cannot counter due to severe hitstun!"
                    }
                }
            ],
            "speed": 10,
            "fastMessage": "{sender} quickly yeets {target}, dealing {move:hp neg} damage!",
            "blockChance": 60,
            "blockHPValue": {
                "__type__": "Bound",
                "left": -25,
                "right": -30
            },
            "blockFailHPValue": {
                "__type__": "Bound",
                "left": -35,
                "right": -49
            },
            "blockMessage": "{sender} tries to yeet {target} but {target} blocks, dealing {move:hpBlock neg} damage!",
            "blockFailMessage": "{target} fails to block and {sender} yeets {target}, dealing {move:hpBlockF neg} damage!",
            "evadeChance": 45,
            "evadeFailHPValue": {
                "__type__": "Bound",
                "left": -40,
                "right": -49
            },
            "evadeMessage": "{sender} tries to yeet {target} but {target} evades it!",
            "evadeFailMessage": "{target} fails to evade {sender} and {sender} yeets {target}, dealing {move:hpEvadeF neg} damage!",
            "criticalChance": 5,
            "criticalHPValue": {
                "__type__": "Bound",
                "left": -50,
                "right": -60
            },
            "blockFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -50,
                "right": -65
            },
            "evadeFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -55,
                "right": -65
            },
            "criticalMessage": "A critical!\n{sender} SUPER yeets {target}, dealing {move:hpCrit neg} damage!",
            "fastCriticalMessage": "A critical\n{sender} quickly SUPER yeets {target}, dealing {move:hp neg} damage!!",
            "blockFailCriticalMessage": "A critical!\n{target} fails to block and {sender} SUPER yeets {target}, dealing {move:hpBlockFCrit neg} damage!",
            "evadeFailCriticalMessage": "A critical!\n{target} fails to evade {sender} and {sender} SUPER yeets {target}, dealing {move:hpEvadeFCrit neg} damage!",
            "failureChance": 10,
            "failureHPValue": {
                "__type__": "Bound",
                "left": -10,
                "right": -15
            },
            "failureMessage": "{sender} tries to yeet {target} but fails, losing {move:hpF neg} {hp.ext_full}."
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Test Main",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Test"
                    }
                ]
            ],
            "description": "",
            "skillRequired": [
                [
                    {
                        "__type__": "Skill",
                        "name": "Acrobatics",
                        "level": 1
                    }
                ]
            ],
            "itemRequired": [
                [
                    {
                        "name": "Knife"
                    }
                ]
            ],
            "moveMessage": "{sender} ran {move}, dealing {move:hp} HP, {move:st} ST, and {move:mp} MP to {target}. It costed {sender} {move:hpC} HP, {move:stC} ST, and {move:mpC} MP.",
            "hpValue": {
                "__type__": "Bound",
                "left": -1,
                "right": -5
            },
            "stValue": {
                "__type__": "Bound",
                "left": -5,
                "right": -5
            },
            "mpValue": {
                "__type__": "Bound",
                "left": -5,
                "right": -5
            },
            "hpCost": {
                "__type__": "Bound",
                "left": -1,
                "right": -5
            },
            "stCost": -5,
            "mpCost": {
                "__type__": "Bound",
                "left": -5,
                "right": -5
            },
            "speed": 0,
            "blockChance": 0,
            "blockFailHPValue": {
                "__type__": "Bound",
                "left": -1,
                "right": -5
            },
            "blockFailSTValue": 1,
            "blockFailMPValue": {
                "__type__": "Bound",
                "left": -1,
                "right": -5
            },
            "blockFailMessage": "{sender} ran {move} and {target} failed to block, taking {move:hpBlockF} HP, {move:stBlockF} ST, and {move:mpBlockF} MP.",
            "evadeChance": 100,
            "evadeMPValue": 10,
            "evadeMessage": "{sender} ran {move} and {target} evaded it, taking {move:mpEvade} .",
            "criticalChance": 0,
            "failureChance": 0
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Test Fast",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Test"
                    }
                ]
            ],
            "description": "",
            "moveMessage": "ERROR: {move} WAS COUNTERABLE",
            "hpValue": {
                "__type__": "Bound",
                "left": -1,
                "right": -5
            },
            "stValue": {
                "__type__": "Bound",
                "left": -5,
                "right": -5
            },
            "mpValue": {
                "__type__": "Bound",
                "left": -5,
                "right": -5
            },
            "hpCost": {
                "__type__": "Bound",
                "left": -1,
                "right": -5
            },
            "stCost": -5,
            "mpCost": {
                "__type__": "Bound",
                "left": -5,
                "right": -5
            },
            "speed": 100,
            "fastMessage": "{sender} ran {move}, dealing {move:hp} HP, {move:st} ST, and {move:mp} MP to {target}. It costed {sender} {move:hpC} HP, {move:stC} ST, and {move:mpC} MP.",
            "blockChance": 0,
            "evadeChance": 0,
            "criticalChance": 0,
            "failureChance": 0
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Test Fail",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Test"
                    }
                ]
            ],
            "description": "",
            "speed": 0,
            "blockChance": 0,
            "evadeChance": 0,
            "criticalChance": 0,
            "failureChance": 100,
            "failureHPValue": {
                "__type__": "Bound",
                "left": -5,
                "right": -10
            },
            "failureSTValue": {
                "__type__": "Bound",
                "left": -5,
                "right": -10
            },
            "failureMPValue": {
                "__type__": "Bound",
                "left": -5,
                "right": -10
            },
            "failureMessage": "{sender} ran {move} and took {move:hpF} HP, {move:stF} ST, and {move:mpF} MP."
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "Test Critical",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Test"
                    }
                ]
            ],
            "description": "",
            "speed": 20,
            "blockChance": 50,
            "blockMessage": "{sender} used {move} and {target} blocked it.",
            "evadeChance": 50,
            "evadeMessage": "{sender} used {move} and {target} evaded it.",
            "criticalChance": 100,
            "criticalHPValue": -11,
            "criticalSTValue": -11,
            "criticalMPValue": -11,
            "blockFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -1,
                "right": -5
            },
            "blockFailCriticalSTValue": {
                "__type__": "Bound",
                "left": -1,
                "right": -5
            },
            "blockFailCriticalMPValue": {
                "__type__": "Bound",
                "left": -1,
                "right": -5
            },
            "evadeFailCriticalHPValue": {
                "__type__": "Bound",
                "left": -6,
                "right": -10
            },
            "evadeFailCriticalSTValue": {
                "__type__": "Bound",
                "left": -6,
                "right": -10
            },
            "evadeFailCriticalMPValue": {
                "__type__": "Bound",
                "left": -6,
                "right": -10
            },
            "criticalMessage": "{sender} ran {move} and got a critical after no counter, dealing {move:hpCrit} HP, {move:stCrit} ST, and {move:mpCrit} MP to {target}.",
            "fastCriticalMessage": "{sender} ran {move} and got a fast critical, dealing {move:hpCrit} HP, {move:stCrit} ST, and {move:mpCrit} MP to {target}.",
            "blockFailCriticalMessage": "{sender} ran {move} and got a critical after a failed block, dealing {move:hpBlockFCrit} HP, {move:stBlockFCrit} ST, and {move:mpBlockFCrit} MP to {target}.",
            "evadeFailCriticalMessage": "{sender} ran {move} and got a critical after a failed evade, dealing {move:hpEvadeFCrit} HP, {move:stEvadeFCrit} ST, and {move:mpEvadeFCrit} MP to {target}.",
            "failureChance": 0
        }
    },
    {
        "__type__": "Move",
        "values": {
            "name": "ATLA Move Template",
            "moveTypes": [
                [
                    {
                        "__type__": "MoveType",
                        "name": "Bender"
                    }
                ]
            ],
            "description": "",
            "skillRequired": [
                [
                    {
                        "__type__": "Skill",
                        "name": " Bending",
                        "level": 1
                    }
                ]
            ],
            "itemRequired": [
                [
                    {
                        "name": "",
                        "count": 0
                    }
                ]
            ],
            "moveMessage": "{move:hp neg}, {move:stC neg}",
            "hpValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "stValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "mpValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "hpCost": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "stCost": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "mpCost": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "speed": 0,
            "fastMessage": "{move:hp neg}",
            "blockChance": 0,
            "blockHPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "blockSTValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "blockMPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "blockFailHPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "blockFailSTValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "blockFailMPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "blockMessage": "{move:hpBlock neg}",
            "blockFailMessage": "{move:hpBlockF neg}",
            "evadeChance": 0,
            "evadeHPValue": 0,
            "evadeSTValue": 0,
            "evadeMPValue": 0,
            "evadeFailHPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "evadeFailSTValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "evadeFailMPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "evadeMessage": "{move:hpEvade neg}",
            "evadeFailMessage": "{move:hpEvadeF neg}",
            "criticalChance": 0,
            "criticalHPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "criticalSTValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "criticalMPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "blockFailCriticalHPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "blockFailCriticalSTValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "blockFailCriticalMPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "evadeFailCriticalHPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "evadeFailCriticalSTValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "evadeFailCriticalMPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "criticalMessage": "{move:hpCrit neg}",
            "fastCriticalMessage": "{move:hpCrit neg}",
            "blockFailCriticalMessage": "{move:hpBlockFCrit neg}",
            "evadeFailCriticalMessage": "{move:hpEvadeFCrit neg}",
            "failureChance": 0,
            "failureHPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "failureSTValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "failureMPValue": {
                "__type__": "Bound",
                "left": 0,
                "right": 0
            },
            "failureMessage": "{move:hpF neg}"
        }
    }
]